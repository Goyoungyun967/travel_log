<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.member.model.dao.MemberDao">
 	<select id="checkId" resultType="int">
 		select count(*) from member where member_id=#{memberId}
 	</select>
 	
 	<insert id="insertMember">
 		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberAge},#{memberGender},#{memberPhone},#{memberAddr},#{memberEmail},sysdate,2,#{memberNickname},#{memberImage})
 	</insert>
 	
 	<select id="selectLoginMember" resultType="member">
 		select member_no,member_pw,member_nickname,member_level from member where member_id=#{memberId}
 	</select>
 	<select id="selectOneMember" resultType="member">
 		select * from member where member_no=#{memberNo}
 	</select>
 	
 	<select id="checkSellerId" resultType="int">
 		select count(*) from seller where business_no=#{businessNo}
 	</select>
 	

 	<update id="updateProfile">
 		UPDATE member SET member_image = #{memberImage} WHERE member_no = #{memberNo}
 	</update>

	<select id="getMemberId" resultType="String">
		select member_id from member where member_no = #{loginNo}
	</select>
	<select id="selectOneUser" resultType="member">
		select * from member where member_no = #{memberNo}
	</select>
	

	<update id="updateMember">
		update member set member_nickname=#{memberNickname}, member_phone=#{memberPhone} where member_no=#{memberNo}
	</update>
	
	<update id="changePw">
	update member set member_pw=#{memberPw} where member_no=#{memberNo}
	</update>

	<select id="getMemberEnrollData" resultType="map">
    	select to_char(enroll_date,'yyyy-mm') as "date", count(*) as "enrollCount" from member
    	where enroll_date between trunc(add_months(sysdate,-12),'year') and trunc(add_months(sysdate,12),'year')-1
    	group by to_char(enroll_date,'yyyy-mm')
    	order by 1
	</select>
	
	<select id="getMemberData" resultType="map">
		select 
		(case
			when member_age <![CDATA[>=]]> 70 then '70대 이상'
			when member_age <![CDATA[>=]]> 60 then '60대'
			when member_age <![CDATA[>=]]> 50 then '50대'
			when member_age <![CDATA[>=]]> 40 then '40대'
			when member_age <![CDATA[>=]]> 30 then '30대'
			when member_age <![CDATA[>=]]> 20 then '20대'
			when member_age <![CDATA[>=]]> 10 then '10대'
		 end) as "age",
	     member_gender as "gender",
		 count(*) as "memberCount"
		 from member
		 group by 
		 (case
			when member_age <![CDATA[>=]]> 70 then '70대 이상'
			when member_age <![CDATA[>=]]> 60 then '60대'
			when member_age <![CDATA[>=]]> 50 then '50대'
			when member_age <![CDATA[>=]]> 40 then '40대'
			when member_age <![CDATA[>=]]> 30 then '30대'
			when member_age <![CDATA[>=]]> 20 then '20대'
			when member_age <![CDATA[>=]]> 10 then '10대'
		 end),member_gender
	</select>
	
	<update id="levelUpdate">
		update member set member_level=3 where member_no=#{memberNo}
	</update>
	
	<select id="searchIdEmail" resultType="String">
		select member_id from member where member_email=#{memberEmail}
	</select>
	

	<update id="searchPw">
		update member set member_pw=#{memberPw} where member_id=#{memberId}
	</update>
	<select id="getAdminMemberListCount" resultType="int">
		select count(*) from member
	</select>
	<select id="getAdminMemberList" resultType="member">
		select * from(select rownum as rnum,m2.* from (select member_no,member_id,member_nickname,member_level,to_char(enroll_date,'yyyy-mm-dd') as enroll_date,nvl((select count(*) from board_report where member_no=m.member_no and report_type=2),0)+nvl((select count(*) from comment_report where member_no=m.member_no and comment_report_type=2),0) as report_count,nvl((select count(*) from member_report where member_no=m.member_no and end_date <![CDATA[>]]> sysdate),0) as member_state from member m order by 
		<if test="type==1">
			report_count,	
		</if>
		member_no desc
		)m2) where rnum between #{start} and #{end}
	</select>
	<insert id="insertMemberReport">
		insert into member_report values (#{memberNo},sysdate,sysdate+14)
	</insert>
	<update id="updateMemberLevel">
		update member set member_level=#{memberLevel} where member_no=#{memberNo}

	</update>
</mapper>
